Experiment – 7
Aim: Design an application to provide the nutrition details of burger and pizza by using fragments.

acitivity_main.xml:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <ImageView
        android:id="@+id/burgerBtn"
        android:layout_width="180dp"
        android:layout_height="205dp"
        app:srcCompat="@drawable/photo_1571091718767_18b5b1457add"
        android:onClick="changeFragment"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/pizzaBtn"
        app:layout_constraintBottom_toTopOf="@+id/fragmentPortion"/>

    <ImageView
        android:id="@+id/pizzaBtn"
        android:layout_width="179dp"
        android:layout_height="184dp"
        app:srcCompat="@drawable/pizza_recipe_1"
        android:onClick="changeFragment"
        app:layout_constraintStart_toEndOf="@+id/burgerBtn"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@+id/fragmentPortion"/>

    <androidx.fragment.app.FragmentContainerView
        android:id="@+id/fragmentPortion"
        android:name="com.example.fragmentsexample.BlankFragment"
        android:layout_width="375dp"
        android:layout_height="375dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/burgerBtn"/>

</androidx.constraintlayout.widget.ConstraintLayout>


MainActivity.java:

package com.example.fragmentsexample;

import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;

import android.os.Bundle;
import android.view.View;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
    public void changeFragment(View v){
        Fragment frag;
        FragmentManager fm = getSupportFragmentManager();
        FragmentTransaction ft = fm.beginTransaction();
        if(v==findViewById(R.id.burgerBtn)){
            frag = new BlankFragment();
            ft.replace(R.id.fragmentPortion,frag);
            ft.commit();
        }
        if(v==findViewById(R.id.pizzaBtn)){
            frag = new BlankFragment2();
            ft.replace(R.id.fragmentPortion,frag);
            ft.commit();
        }
    }
}

fragment_blank.xml:

<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#BF9000"
    tools:context=".BlankFragment">

    <!-- TODO: Update blank fragment layout -->
    <TextView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:textSize="24dp"
        android:textStyle="bold"
        android:textAlignment="center"
        android:textColor="#990000"
        android:text = "Burger Details\nCalories:354\nFat:18g\nProtein:22g"
        android:gravity="center_vertical"
        tools:ignore="RtlCompat" />

</FrameLayout>

BlankFragment.java:

package com.example.fragmentsexample;

import android.os.Bundle;

import androidx.fragment.app.Fragment;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link BlankFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class BlankFragment extends Fragment {

    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    public BlankFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment BlankFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static BlankFragment newInstance(String param1, String param2) {
        BlankFragment fragment = new BlankFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_blank, container, false);
    }
}

fragment_blank2.xml:

<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#38761d"
    tools:context=".BlankFragment2">

    <!-- TODO: Update blank fragment layout -->
    <TextView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:textSize="24dp"
        android:textStyle="bold"
        android:textAlignment="center"
        android:textColor="#85200c"
        android:text = "Pizza Details\nCalories:285\nFat:10g\nProtein:12g"
        android:gravity="center_vertical"
        tools:ignore="RtlCompat" />

</FrameLayout>
BlankFragment2.xml:

package com.example.fragmentsexample;

import android.os.Bundle;

import androidx.fragment.app.Fragment;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link BlankFragment2#newInstance} factory method to
 * create an instance of this fragment.
 */
public class BlankFragment2 extends Fragment {

    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    public BlankFragment2() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment BlankFragment2.
     */
    // TODO: Rename and change types and number of parameters
    public static BlankFragment2 newInstance(String param1, String param2) {
        BlankFragment2 fragment = new BlankFragment2();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_blank2, container, false);
    }
}





















Experiment – 8
Aim: Design an application to provide the student details with section number using fragments.

acitivity_main.xml:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <ListView
        android:id="@+id/studentList"
        android:layout_width="175dp"
        android:layout_height="match_parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/fragmentPortion"
        app:layout_constraintBottom_toBottomOf="parent"/>

    <androidx.fragment.app.FragmentContainerView
        android:id="@+id/fragmentPortion"
        android:name="com.example.studentdetailsfragments.DetailsFragment"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toEndOf="@+id/studentList"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java:

package com.example.studentdetailsfragments;

import androidx.appcompat.app.AppCompatActivity;

import android.app.Fragment;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class MainActivity extends AppCompatActivity {
    ListView list;
    String Stu[] = {"ABC","DEF","GHI","JKL"};

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        list = findViewById(R.id.studentList);
        ArrayAdapter adapter = new ArrayAdapter(this, android.R.layout.simple_list_item_1,Stu);
        list.setAdapter(adapter);
        list.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                DetailsFragment frag = (DetailsFragment) getSupportFragmentManager().findFragmentById(R.id.fragmentPortion);
                frag.change(position);
            }
        });
    }
}

fragment_details.xml:

<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".DetailsFragment">

    <!-- TODO: Update blank fragment layout -->
    <TextView
        android:id="@+id/result"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:textAlignment="center"
        android:gravity="center_vertical"
        android:text="Name: \nSection Number:"
        android:textStyle="bold"
        android:textSize="18dp"
        tools:ignore="RtlCompat" />

</FrameLayout>

DetailsFragment.java:

package com.example.studentdetailsfragments;

import android.os.Bundle;

import androidx.fragment.app.Fragment;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link DetailsFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class DetailsFragment extends Fragment {

    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;
    String Users[] = {"ABC","DEF","GHI","JKL"};
    String Section[] = {"5CSE1","5CSE2","5CSE3","5CSE4"};
    TextView res;

    public DetailsFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment DetailsFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static DetailsFragment newInstance(String param1, String param2) {
        DetailsFragment fragment = new DetailsFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View view = inflater.inflate(R.layout.fragment_details, container, false);
        res = view.findViewById(R.id.result);
        return view;
    }
    public void change(int position){
        res.setText("Name: "+Users[position]+"\nSection Number: "+Section[position]);
    }
}







Experiment – 10
Aim: Design an application to run music in the background while using other application.

Solution:
Step 1: Create a MyService java file:
Choose the “app” folder and create a new file by selecting “New”, then “Service” and entering a name. You can choose any filename you like, for example “MyService.java”.

Step 2: Create a resource directory
To create a menu, you need to create raw folder so create one inside the “raw” folder by selecting it and choosing “File”, “New”, then “Folder” and entering “raw” as the name and type as raw.

Step 3: Add an audio file:
Add the audio file under “raw” directory.

activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <ImageView
        android:id="@+id/playerImage"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:srcCompat="@drawable/download__1_"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@+id/playBtn"/>

    <ImageView
        android:id="@+id/playBtn"
        android:layout_width="108dp"
        android:layout_height="95dp"
        app:srcCompat="@drawable/download_play"
        android:onClick="changePlay"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/stopBtn"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/playerImage"/>

    <ImageView
        android:id="@+id/stopBtn"
        android:layout_width="103dp"
        android:layout_height="99dp"
        app:srcCompat="@drawable/download_stop"
        android:onClick="changePlay"
        app:layout_constraintStart_toEndOf="@+id/playBtn"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/playerImage"
        app:layout_constraintBottom_toBottomOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java:
package com.example.musicplayerservices;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
    public void changePlay(View view){
        if(view == findViewById(R.id.playBtn)){
            startService(new Intent(this,MyService.class));
        }
        else if(view==findViewById(R.id.stopBtn)){
            stopService(new Intent(this,MyService.class));
        }
    }
}

MyService.java:
package com.example.musicplayerservices;

import android.app.Service;
import android.content.Intent;
import android.media.MediaPlayer;
import android.os.IBinder;
import android.provider.Settings;

public class MyService extends Service {

    MediaPlayer mp;

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }
    public int onStartCommand(Intent intent, int flags, int startId) {
        mp = MediaPlayer.create(this,R.raw.ringtone);
        mp.setLooping(true);
        mp.start();
        return START_STICKY;
    }
    public void onDestroy(){
        super.onDestroy();
        mp.stop();
    }

}

\


Experiment – 11
Aim: Design an application to check the airplane mode is enabled or not using broadcast receivers.

Solution:
Create a AeroplaneModeChangedEx java file:
Choose the “app” folder and create a new java file by selecting “New”, then “Java Class” and entering a name. You can choose any filename you like, for example “AeroplaneModeChangedEx.java”.

activity_main.xml:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Airplane Mode Disabled"
        android:textStyle="bold"
        android:textColor="#00FF00"
        android:textAlignment="center"
        android:textSize="50dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:gravity="center_horizontal" />
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java:

package com.example.airplanemodechangedbr;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    AeroplaneModeChangedEx receiver;
    TextView text;
    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        text = findViewById(R.id.textView);
    }

    @Override
    protected void onStart() {
        super.onStart();
        receiver = new AeroplaneModeChangedEx(text);
        registerReceiver(receiver,new IntentFilter(Intent.ACTION_AIRPLANE_MODE_CHANGED));
    }

    @Override
    protected void onStop() {
        super.onStop();
        unregisterReceiver(receiver);
    }
}

AeroplaneModeChangedEx.java:

package com.example.airplanemodechangedbr;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.widget.TextView;

public class AeroplaneModeChangedEx extends BroadcastReceiver {
    TextView tview;
    AeroplaneModeChangedEx(TextView tv){
        tview = tv;
    }
    @Override
    public void onReceive(Context context, Intent intent) {
       Boolean isAirplaneModeEnabled = intent.getBooleanExtra("state",false);
       if(isAirplaneModeEnabled){
           tview.setText("Aeroplane Mode Enabled");
           tview.setTextColor(Color.parseColor("#FF0000"));
       }
       else {
           tview.setText("Aeroplane Mode Disabled");
           tview.setTextColor(Color.parseColor("#00FF00"));
       }
    }
}

Output:





Experiment – 12
Aim: Design an application to monitor the battery level using broadcast receivers.

Solution:
Create a BatteryReceiver java file:
Choose the “app” folder and create a new java file by selecting “New”, then “Java Class” and entering a name. You can choose any filename you like, for example “BatteryReceiver.java”.

activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/batteryText"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="50dp"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/checkBtn"
        app:layout_constraintBottom_toTopOf="@+id/progressBar"/>

    <Button
        android:id="@+id/checkBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Check Battery Percentage"
        android:onClick="checkBatteryPercentage"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@+id/batteryText"/>

    <ProgressBar
        android:id="@+id/progressBar"
        style="?android:attr/progressBarStyleHorizontal"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:minHeight="100dp"
        android:minWidth="200dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/batteryText"
        app:layout_constraintBottom_toBottomOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java:

package com.example.broadcastrecieverex;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.view.View;
import android.widget.ProgressBar;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    TextView tv;
    ProgressBar progress;
    BatteryReceiver BR;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        tv = findViewById(R.id.batteryText);
        progress = findViewById(R.id.progressBar);

    }
    public void checkBatteryPercentage(View view){
        BR = new BatteryReceiver(tv,progress);
        registerReceiver(BR,new IntentFilter(Intent.ACTION_BATTERY_CHANGED));
    }

    @Override
    protected void onStop() {
        super.onStop();
        unregisterReceiver(BR);
    }
}

BatteryReceiver.java:

package com.example.broadcastrecieverex;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.res.ColorStateList;
import android.graphics.Color;
import android.os.Build;
import android.widget.ProgressBar;
import android.widget.TextView;

import androidx.annotation.RequiresApi;

public class BatteryReceiver extends BroadcastReceiver {
    TextView tview;
    ProgressBar prg;
    BatteryReceiver(TextView tv, ProgressBar progressBar){
        tview = tv;
        prg = progressBar;
    }
    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    @Override
    public void onReceive(Context context, Intent intent) {
        int per = intent.getIntExtra("level",0);
        if(per>=50) {
            tview.setText(per + "%");
            prg.setProgress(per);
            prg.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
        }
        else if(per<50 && per>=20){
            tview.setText(per + "%");
            prg.setProgress(per);
            prg.setProgressTintList(ColorStateList.valueOf(Color.YELLOW));
        } else if (per<20 && per>0) {
            tview.setText(per + "%");
            prg.setProgress(per);
            prg.setProgressTintList(ColorStateList.valueOf(Color.RED));
        }
    }
}











Experiment – 13
Aim: Design an application to store the student details using SQLite Database

Solution:
Create a MyDBHandler java file:
Choose the “Java” folder and create a new java file by selecting “New”, then “Java Class” and entering a name. You can choose any filename you like, for example “MyDBHandler.java”.

activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/nameBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="Enter Student Name"
        android:inputType="text"
        android:minHeight="48dp"
        app:layout_constraintStart_toEndOf="@+id/nameLbl"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/Header"
        app:layout_constraintBottom_toTopOf="@+id/idBox"/>

    <TextView
        android:id="@+id/Header"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Students Database"
        android:textSize="24sp"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@+id/nameBox"/>

    <TextView
        android:id="@+id/nameLbl"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Student Name"
        android:textStyle="bold"
       app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/nameBox"
        app:layout_constraintTop_toBottomOf="@+id/Header"
        app:layout_constraintBottom_toTopOf="@+id/idLbl"/>

    <TextView
        android:id="@+id/idLbl"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Student Id"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/idBox"
        app:layout_constraintTop_toBottomOf="@+id/nameLbl"
        app:layout_constraintBottom_toTopOf="@+id/insertBtn"/>

    <EditText
        android:id="@+id/idBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="Enter Student Id"
        android:inputType="text"
        android:minHeight="48dp"
        app:layout_constraintStart_toEndOf="@+id/idLbl"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/nameBox"
        app:layout_constraintBottom_toTopOf="@+id/deleteBtn"/>

    <Button
        android:id="@+id/insertBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="ADD"
        app:layout_constraintBottom_toTopOf="@+id/displayBtn"
        app:layout_constraintEnd_toStartOf="@+id/deleteBtn"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/idLbl" />

    <Button
        android:id="@+id/deleteBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="25dp"
        android:text="DELETE"
        app:layout_constraintBottom_toTopOf="@+id/displayBtn"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@+id/insertBtn"
        app:layout_constraintTop_toBottomOf="@+id/idBox" />

    <Button
        android:id="@+id/displayBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="DISPLAY ALL"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/deleteBtn"
        app:layout_constraintBottom_toTopOf="@+id/result"/>

    <TextView
        android:id="@+id/result"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/displayBtn"
        app:layout_constraintBottom_toBottomOf="parent"/>
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java:
package com.example.dbproject;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    EditText eid,ename;
    Button ins,del,dis;
         TextView res;
    MyDBHandler db;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        eid = findViewById(R.id.idBox);
        ename = findViewById(R.id.nameBox);
        ins = findViewById(R.id.insertBtn);
        del = findViewById(R.id.deleteBtn);
        dis = findViewById(R.id.displayBtn);
        res = findViewById(R.id.result);
        db = new MyDBHandler(getApplicationContext(),"students",null,1);

        ins.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String sid = eid.getText().toString();
                String sname = ename.getText().toString();
                db.insertRecord(sid,sname);
                Toast.makeText(getApplicationContext(),"Inserted",Toast.LENGTH_LONG).show();
            }
        });
        del.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String sid = eid.getText().toString();
                db.deleteRecord(sid);
                Toast.makeText(getApplicationContext(),"Deleted",Toast.LENGTH_LONG).show();
            }
        });
        dis.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String tabledata = db.displayRecord();
                res.setText(tabledata);
            }
        });

    }
}

MyDBHandler.java:
package com.example.dbproject;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import androidx.annotation.Nullable;

public class MyDBHandler extends SQLiteOpenHelper {
    public MyDBHandler(@Nullable Context context, @Nullable String name, @Nullable SQLiteDatabase.CursorFactory factory, int version) {
        super(context, name, factory, version);
    }
    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("create table students (stuId varChar(10),stuname varChar(20))");
    }
    @Override
    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) {

    }
   public void insertRecord(String sid,String sname){
        SQLiteDatabase db = this.getWritableDatabase();
        //One Way to insert the records using execSQL method
        db.execSQL("insert into students values (?,?)",new String[]{sid,sname});
        //Alternative Way to insert the records using insert() menthod and ContentValues Object
        /*ContentValues values = new ContentValues();
        values.put("stuId",sid);
        values.put("stuname",sname);
        db.insert("students",null,values);*/
        db.close();
   }
   public void deleteRecord(String sid){
        SQLiteDatabase db = this.getWritableDatabase();
        //One Way to delete the records using execSQL method
        //db.execSQL("delete from students where stuId=?",new String[]{sid});
        //Alternative Way to insert the records using delete() menthod
       db.delete("students","stuId=?",new String[]{sid});
   }
   public String displayRecord(){
        String tdata = "";
        SQLiteDatabase db = this.getReadableDatabase();
        Cursor cursor = db.rawQuery("select * from students",null);
        while (cursor.moveToNext()) {
            String i = cursor.getString(0);
            String n = cursor.getString(1);
            tdata += i+":"+n+"\n";
        }
        db.close();
        return tdata;
   }
}
\


Experiment – 14
Aim: Design an application to monitor the health conditions of a user and to notify the same.

Solution:
activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/bpBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="Enter BP value"
        android:inputType="text"
        android:minHeight="48dp"
        app:layout_constraintStart_toEndOf="@+id/bpLbl"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/Header"
        app:layout_constraintBottom_toTopOf="@+id/tempBox"/>

    <TextView
        android:id="@+id/tempLbl"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Temperature"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/tempBox"
        app:layout_constraintTop_toBottomOf="@+id/bpLbl"
        app:layout_constraintBottom_toTopOf="@+id/submitBtn"/>

    <TextView
        android:id="@+id/bpLbl"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Blood Pressure"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/bpBox"
        app:layout_constraintTop_toBottomOf="@+id/Header"
        app:layout_constraintBottom_toTopOf="@+id/tempLbl"/>

    <EditText
        android:id="@+id/tempBox"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="Enter Temperature Value"
        android:inputType="text"
        android:minHeight="48dp"
        app:layout_constraintStart_toEndOf="@+id/tempLbl"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/bpBox"
        app:layout_constraintBottom_toTopOf="@+id/submitBtn"/>

    <Button
        android:id="@+id/submitBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Submit"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tempBox"/>

    <TextView
        android:id="@+id/Header"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Body Vital Details"
        android:textSize="24sp"
        android:textStyle="bold"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@+id/bpBox"/>

</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java:
package com.example.healthmonitoringapp;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends AppCompatActivity {
    EditText bp,temp;
    Button btn;
    Integer bp_int,temp_int;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        bp = findViewById(R.id.bpBox);
        temp = findViewById(R.id.tempBox);
        btn = findViewById(R.id.submitBtn);
        btn.setOnClickListener(new View.OnClickListener() {
            @RequiresApi(api = Build.VERSION_CODES.O)
            @Override
            public void onClick(View v) {
                bp_int = Integer.parseInt(bp.getText().toString());
                temp_int = Integer.parseInt(temp.getText().toString());
                String msg;
                int notificationId = 100;
                if((bp_int>=60&&bp_int<=100)||temp_int==98)
                    msg = "Your Vitals are fine";
                else
                    msg = "You need to consult doctor";
                String CHANNEL_ID = "my_ch";
                String CHANNEL_NAME = "my_channel";
                int importance = NotificationManager.IMPORTANCE_HIGH;
                NotificationChannel channel = new NotificationChannel(CHANNEL_ID,CHANNEL_NAME,importance);
                NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
                manager.createNotificationChannel(channel);
                Intent it = new Intent(MainActivity.this, NotificationResult.class);
                it.putExtra("Message",msg);
                it.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP|Intent.FLAG_ACTIVITY_CLEAR_TOP);
                PendingIntent pintent = PendingIntent.getActivity(MainActivity.this,0,it,PendingIntent.FLAG_UPDATE_CURRENT);
                NotificationCompat.Builder builder = new NotificationCompat.Builder(MainActivity.this,CHANNEL_ID);
                builder.setSmallIcon(R.drawable.ic_launcher_background);
                builder.setContentIntent(pintent);
                builder.setContentTitle("Vital Conditions");
                builder.setContentText("BP: "+bp_int+" Temperature: "+temp_int);
                manager.notify(notificationId,builder.build());
            }
        });
    }
}
activity_notification_result.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".NotificationResult">

    <TextView
        android:id="@+id/result"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textStyle="bold"
        android:textSize="40dp"
        android:textColor="#0F08F0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"/>
</androidx.constraintlayout.widget.ConstraintLayout>

NotificationResult.java:

package com.example.healthmonitoringapp;

import androidx.appcompat.app.AppCompatActivity;

import android.app.NotificationManager;
import android.content.Intent;
import android.os.Bundle;
import android.widget.TextView;

public class NotificationResult extends AppCompatActivity {
    TextView res;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_notification_result);
        onNewIntent(getIntent());
        NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        manager.cancel(100);
    }

    @Override
    protected void onNewIntent(Intent intent) {
        Bundle extras = intent.getExtras();
        if(extras!=null) {
            if (extras.containsKey("Message")) {
                setContentView(R.layout.activity_notification_result);
                String msg = extras.getString("Message");
                res = findViewById(R.id.result);
                res.setText("Report: "+msg);
            }
            super.onNewIntent(intent);
        }
    }
}
